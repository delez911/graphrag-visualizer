{
    "sourceFile": "src/app/layout/App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1727234119027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727234125484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n } from \"@mui/material\";\n import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n import GitHubIcon from \"@mui/icons-material/GitHub\";\n-import i18n from '@/i18n/i18next-config'\n+import i18n from '@/i18n'\n \n const App: React.FC = () => {\n   const [darkMode, setDarkMode] = useState(true);\n   const paletteType = darkMode ? \"dark\" : \"light\";\n"
                },
                {
                    "date": 1727234134980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n } from \"@mui/material\";\n import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n import GitHubIcon from \"@mui/icons-material/GitHub\";\n-import i18n from '@/i18n'\n+import i18n from '@/i18n/'\n \n const App: React.FC = () => {\n   const [darkMode, setDarkMode] = useState(true);\n   const paletteType = darkMode ? \"dark\" : \"light\";\n"
                },
                {
                    "date": 1727234173304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,122 @@\n+import React, { useEffect, useState } from \"react\";\n+import ReactGA from \"react-ga4\";\n+\n+import GraphDataHandler from \"../components/GraphDataHandler\";\n+import {\n+  CssBaseline,\n+  Container,\n+  Box,\n+  createTheme,\n+  darkScrollbar,\n+  ThemeProvider,\n+  IconButton,\n+  Tooltip,\n+  Link,\n+} from \"@mui/material\";\n+import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n+import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n+import GitHubIcon from \"@mui/icons-material/GitHub\";\n+import i18n from '@/i18n'\n+\n+const App: React.FC = () => {\n+  const [darkMode, setDarkMode] = useState(true);\n+  const paletteType = darkMode ? \"dark\" : \"light\";\n+\n+  const theme = createTheme({\n+    palette: {\n+      mode: paletteType,\n+    },\n+    components: {\n+      MuiCssBaseline: {\n+        styleOverrides: {\n+          body: paletteType === \"dark\" ? darkScrollbar() : null,\n+        },\n+      },\n+      MuiPopover: {\n+        styleOverrides: {\n+          root: {\n+            zIndex: 1600,\n+          },\n+        },\n+      },\n+      MuiModal: {\n+        styleOverrides: {\n+          root: {\n+            zIndex: 1600,\n+          },\n+        },\n+      },\n+    },\n+  });\n+\n+  function handleThemeChange() {\n+    setDarkMode(!darkMode);\n+    localStorage.setItem(\"theme\", darkMode ? \"light\" : \"dark\");\n+  }\n+\n+  useEffect(() => {\n+    const currentTheme = localStorage.getItem(\"theme\");\n+    setDarkMode(currentTheme === \"dark\");\n+  }, []);\n+\n+  useEffect(() => {\n+    const measurementId = process.env.REACT_APP_GA_MEASUREMENT_ID;\n+    if (measurementId) {\n+      ReactGA.initialize(measurementId);\n+      ReactGA.send({\n+        hitType: \"pageview\",\n+        page: window.location.pathname + window.location.search,\n+      });\n+    } else {\n+      console.error(\"Google Analytics measurement ID not found\");\n+    }\n+  }, []);\n+\n+  return (\n+    <ThemeProvider theme={theme}>\n+      <Container disableGutters maxWidth={false}>\n+        <CssBaseline />\n+\n+        <Box\n+          sx={{\n+            position: \"absolute\",\n+            top: 12,\n+            right: 12,\n+            zIndex: 1000,\n+            display: \"flex\",\n+            flexDirection: { xs: \"column\", sm: \"row\" },\n+            alignItems: \"center\",\n+            gap: 1,\n+            padding: { xs: \"20px 0px\", sm: \"0\" },\n+          }}\n+        >\n+          <IconButton\n+            component={Link}\n+            href=\"https://github.com/noworneverev/graphrag-visualizer\"\n+            target=\"_blank\"\n+            rel=\"noopener\"\n+            color=\"inherit\"\n+          >\n+            <GitHubIcon />\n+          </IconButton>\n+          {darkMode ? (\n+            <Tooltip title=\"Turn on the light\">\n+              <IconButton onClick={handleThemeChange} color=\"inherit\">\n+                <DarkModeOutlinedIcon />\n+              </IconButton>\n+            </Tooltip>\n+          ) : (\n+            <Tooltip title=\"Turn off the light\">\n+              <IconButton onClick={handleThemeChange} color=\"inherit\">\n+                <LightModeOutlinedIcon />\n+              </IconButton>\n+            </Tooltip>\n+          )}\n+        </Box>\n+        <GraphDataHandler />\n+      </Container>\n+    </ThemeProvider>\n+  );\n+};\n+\n+export default App;\n"
                },
                {
                    "date": 1727234284054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n } from \"@mui/material\";\n import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n import GitHubIcon from \"@mui/icons-material/GitHub\";\n-import i18n from '@/i18n'\n \n const App: React.FC = () => {\n   const [darkMode, setDarkMode] = useState(true);\n   const paletteType = darkMode ? \"dark\" : \"light\";\n@@ -119,126 +118,4 @@\n   );\n };\n \n export default App;\n-import React, { useEffect, useState } from \"react\";\n-import ReactGA from \"react-ga4\";\n-\n-import GraphDataHandler from \"../components/GraphDataHandler\";\n-import {\n-  CssBaseline,\n-  Container,\n-  Box,\n-  createTheme,\n-  darkScrollbar,\n-  ThemeProvider,\n-  IconButton,\n-  Tooltip,\n-  Link,\n-} from \"@mui/material\";\n-import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n-import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n-import GitHubIcon from \"@mui/icons-material/GitHub\";\n-import i18n from '@/i18n/'\n-\n-const App: React.FC = () => {\n-  const [darkMode, setDarkMode] = useState(true);\n-  const paletteType = darkMode ? \"dark\" : \"light\";\n-\n-  const theme = createTheme({\n-    palette: {\n-      mode: paletteType,\n-    },\n-    components: {\n-      MuiCssBaseline: {\n-        styleOverrides: {\n-          body: paletteType === \"dark\" ? darkScrollbar() : null,\n-        },\n-      },\n-      MuiPopover: {\n-        styleOverrides: {\n-          root: {\n-            zIndex: 1600,\n-          },\n-        },\n-      },\n-      MuiModal: {\n-        styleOverrides: {\n-          root: {\n-            zIndex: 1600,\n-          },\n-        },\n-      },\n-    },\n-  });\n-\n-  function handleThemeChange() {\n-    setDarkMode(!darkMode);\n-    localStorage.setItem(\"theme\", darkMode ? \"light\" : \"dark\");\n-  }\n-\n-  useEffect(() => {\n-    const currentTheme = localStorage.getItem(\"theme\");\n-    setDarkMode(currentTheme === \"dark\");\n-  }, []);\n-\n-  useEffect(() => {\n-    const measurementId = process.env.REACT_APP_GA_MEASUREMENT_ID;\n-    if (measurementId) {\n-      ReactGA.initialize(measurementId);\n-      ReactGA.send({\n-        hitType: \"pageview\",\n-        page: window.location.pathname + window.location.search,\n-      });\n-    } else {\n-      console.error(\"Google Analytics measurement ID not found\");\n-    }\n-  }, []);\n-\n-  return (\n-    <ThemeProvider theme={theme}>\n-      <Container disableGutters maxWidth={false}>\n-        <CssBaseline />\n-\n-        <Box\n-          sx={{\n-            position: \"absolute\",\n-            top: 12,\n-            right: 12,\n-            zIndex: 1000,\n-            display: \"flex\",\n-            flexDirection: { xs: \"column\", sm: \"row\" },\n-            alignItems: \"center\",\n-            gap: 1,\n-            padding: { xs: \"20px 0px\", sm: \"0\" },\n-          }}\n-        >\n-          <IconButton\n-            component={Link}\n-            href=\"https://github.com/noworneverev/graphrag-visualizer\"\n-            target=\"_blank\"\n-            rel=\"noopener\"\n-            color=\"inherit\"\n-          >\n-            <GitHubIcon />\n-          </IconButton>\n-          {darkMode ? (\n-            <Tooltip title=\"Turn on the light\">\n-              <IconButton onClick={handleThemeChange} color=\"inherit\">\n-                <DarkModeOutlinedIcon />\n-              </IconButton>\n-            </Tooltip>\n-          ) : (\n-            <Tooltip title=\"Turn off the light\">\n-              <IconButton onClick={handleThemeChange} color=\"inherit\">\n-                <LightModeOutlinedIcon />\n-              </IconButton>\n-            </Tooltip>\n-          )}\n-        </Box>\n-        <GraphDataHandler />\n-      </Container>\n-    </ThemeProvider>\n-  );\n-};\n-\n-export default App;\n"
                },
                {
                    "date": 1727234815948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,10 @@\n } from \"@mui/material\";\n import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n import GitHubIcon from \"@mui/icons-material/GitHub\";\n+import i18n from '@/i18n'\n+import { useTranslation } from 'react-i18next';\n \n const App: React.FC = () => {\n   const [darkMode, setDarkMode] = useState(true);\n   const paletteType = darkMode ? \"dark\" : \"light\";\n"
                },
                {
                    "date": 1727234827095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n import i18n from '@/i18n'\n import { useTranslation } from 'react-i18next';\n \n const App: React.FC = () => {\n+  const { t } = useTranslation();\n   const [darkMode, setDarkMode] = useState(true);\n   const paletteType = darkMode ? \"dark\" : \"light\";\n \n   const theme = createTheme({\n"
                },
                {
                    "date": 1727234856115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n           >\n             <GitHubIcon />\n           </IconButton>\n           {darkMode ? (\n-            <Tooltip title=\"Turn on the light\">\n+            <Tooltip  title={t('tooltip.turnOnLight')}title=\"Turn on the light\">\n               <IconButton onClick={handleThemeChange} color=\"inherit\">\n                 <DarkModeOutlinedIcon />\n               </IconButton>\n             </Tooltip>\n"
                },
                {
                    "date": 1727234861644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n           >\n             <GitHubIcon />\n           </IconButton>\n           {darkMode ? (\n-            <Tooltip  title={t('tooltip.turnOnLight')}title=\"Turn on the light\">\n+            <Tooltip  title={t('tooltip.turnOnLight')}>\n               <IconButton onClick={handleThemeChange} color=\"inherit\">\n                 <DarkModeOutlinedIcon />\n               </IconButton>\n             </Tooltip>\n"
                },
                {
                    "date": 1727234877721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                 <DarkModeOutlinedIcon />\n               </IconButton>\n             </Tooltip>\n           ) : (\n-            <Tooltip title=\"Turn off the light\">\n+            <Tooltip  title={t('tooltip.turnOffLight')}>\n               <IconButton onClick={handleThemeChange} color=\"inherit\">\n                 <LightModeOutlinedIcon />\n               </IconButton>\n             </Tooltip>\n"
                },
                {
                    "date": 1727234983081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n           >\n             <GitHubIcon />\n           </IconButton>\n           {darkMode ? (\n-            <Tooltip  title={t('tooltip.turnOnLight')}>\n+            <Tooltip  title={t('layout.tooltip.turnOnLight')}>\n               <IconButton onClick={handleThemeChange} color=\"inherit\">\n                 <DarkModeOutlinedIcon />\n               </IconButton>\n             </Tooltip>\n"
                },
                {
                    "date": 1727234990587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                 <DarkModeOutlinedIcon />\n               </IconButton>\n             </Tooltip>\n           ) : (\n-            <Tooltip  title={t('tooltip.turnOffLight')}>\n+            <Tooltip  title={t('layout.tooltip.turnOffLight')}>\n               <IconButton onClick={handleThemeChange} color=\"inherit\">\n                 <LightModeOutlinedIcon />\n               </IconButton>\n             </Tooltip>\n"
                },
                {
                    "date": 1727236488032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useEffect, useState } from \"react\";\n-import ReactGA from \"react-ga4\";\n \n import GraphDataHandler from \"../components/GraphDataHandler\";\n import {\n   CssBaseline,\n"
                },
                {
                    "date": 1727236501905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,21 +59,8 @@\n     const currentTheme = localStorage.getItem(\"theme\");\n     setDarkMode(currentTheme === \"dark\");\n   }, []);\n \n-  useEffect(() => {\n-    const measurementId = process.env.REACT_APP_GA_MEASUREMENT_ID;\n-    if (measurementId) {\n-      ReactGA.initialize(measurementId);\n-      ReactGA.send({\n-        hitType: \"pageview\",\n-        page: window.location.pathname + window.location.search,\n-      });\n-    } else {\n-      console.error(\"Google Analytics measurement ID not found\");\n-    }\n-  }, []);\n-\n   return (\n     <ThemeProvider theme={theme}>\n       <Container disableGutters maxWidth={false}>\n         <CssBaseline />\n"
                },
                {
                    "date": 1727238733625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n } from \"@mui/material\";\n import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n import GitHubIcon from \"@mui/icons-material/GitHub\";\n-import i18n from '@/i18n'\n+import '@/i18n'\n import { useTranslation } from 'react-i18next';\n \n const App: React.FC = () => {\n   const { t } = useTranslation();\n"
                },
                {
                    "date": 1727238874343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n } from \"@mui/material\";\n import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n import GitHubIcon from \"@mui/icons-material/GitHub\";\n-import '@/i18n'\n+import '@/'\n import { useTranslation } from 'react-i18next';\n \n const App: React.FC = () => {\n   const { t } = useTranslation();\n"
                },
                {
                    "date": 1727239370308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,109 @@\n+import React, { useEffect, useState } from \"react\";\n+\n+import GraphDataHandler from \"../components/GraphDataHandler\";\n+import {\n+  CssBaseline,\n+  Container,\n+  Box,\n+  createTheme,\n+  darkScrollbar,\n+  ThemeProvider,\n+  IconButton,\n+  Tooltip,\n+  Link,\n+} from \"@mui/material\";\n+import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n+import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n+import GitHubIcon from \"@mui/icons-material/GitHub\";\n+import { useTranslation } from 'react-i18next';\n+\n+const App: React.FC = () => {\n+  const { t } = useTranslation();\n+  const [darkMode, setDarkMode] = useState(true);\n+  const paletteType = darkMode ? \"dark\" : \"light\";\n+\n+  const theme = createTheme({\n+    palette: {\n+      mode: paletteType,\n+    },\n+    components: {\n+      MuiCssBaseline: {\n+        styleOverrides: {\n+          body: paletteType === \"dark\" ? darkScrollbar() : null,\n+        },\n+      },\n+      MuiPopover: {\n+        styleOverrides: {\n+          root: {\n+            zIndex: 1600,\n+          },\n+        },\n+      },\n+      MuiModal: {\n+        styleOverrides: {\n+          root: {\n+            zIndex: 1600,\n+          },\n+        },\n+      },\n+    },\n+  });\n+\n+  function handleThemeChange() {\n+    setDarkMode(!darkMode);\n+    localStorage.setItem(\"theme\", darkMode ? \"light\" : \"dark\");\n+  }\n+\n+  useEffect(() => {\n+    const currentTheme = localStorage.getItem(\"theme\");\n+    setDarkMode(currentTheme === \"dark\");\n+  }, []);\n+\n+  return (\n+    <ThemeProvider theme={theme}>\n+      <Container disableGutters maxWidth={false}>\n+        <CssBaseline />\n+\n+        <Box\n+          sx={{\n+            position: \"absolute\",\n+            top: 12,\n+            right: 12,\n+            zIndex: 1000,\n+            display: \"flex\",\n+            flexDirection: { xs: \"column\", sm: \"row\" },\n+            alignItems: \"center\",\n+            gap: 1,\n+            padding: { xs: \"20px 0px\", sm: \"0\" },\n+          }}\n+        >\n+          <IconButton\n+            component={Link}\n+            href=\"https://github.com/noworneverev/graphrag-visualizer\"\n+            target=\"_blank\"\n+            rel=\"noopener\"\n+            color=\"inherit\"\n+          >\n+            <GitHubIcon />\n+          </IconButton>\n+          {darkMode ? (\n+            <Tooltip  title={t('layout.tooltip.turnOnLight')}>\n+              <IconButton onClick={handleThemeChange} color=\"inherit\">\n+                <DarkModeOutlinedIcon />\n+              </IconButton>\n+            </Tooltip>\n+          ) : (\n+            <Tooltip  title={t('layout.tooltip.turnOffLight')}>\n+              <IconButton onClick={handleThemeChange} color=\"inherit\">\n+                <LightModeOutlinedIcon />\n+              </IconButton>\n+            </Tooltip>\n+          )}\n+        </Box>\n+        <GraphDataHandler />\n+      </Container>\n+    </ThemeProvider>\n+  );\n+};\n+\n+export default App;\n"
                },
                {
                    "date": 1727239745819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n import GitHubIcon from \"@mui/icons-material/GitHub\";\n import { useTranslation } from 'react-i18next';\n \n const App: React.FC = () => {\n-  const { t } = useTranslation();\n+  const { t } = useTranslation('layout');\n   const [darkMode, setDarkMode] = useState(true);\n   const paletteType = darkMode ? \"dark\" : \"light\";\n \n   const theme = createTheme({\n@@ -106,114 +106,4 @@\n   );\n };\n \n export default App;\n-import React, { useEffect, useState } from \"react\";\n-\n-import GraphDataHandler from \"../components/GraphDataHandler\";\n-import {\n-  CssBaseline,\n-  Container,\n-  Box,\n-  createTheme,\n-  darkScrollbar,\n-  ThemeProvider,\n-  IconButton,\n-  Tooltip,\n-  Link,\n-} from \"@mui/material\";\n-import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n-import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n-import GitHubIcon from \"@mui/icons-material/GitHub\";\n-import '@/'\n-import { useTranslation } from 'react-i18next';\n-\n-const App: React.FC = () => {\n-  const { t } = useTranslation();\n-  const [darkMode, setDarkMode] = useState(true);\n-  const paletteType = darkMode ? \"dark\" : \"light\";\n-\n-  const theme = createTheme({\n-    palette: {\n-      mode: paletteType,\n-    },\n-    components: {\n-      MuiCssBaseline: {\n-        styleOverrides: {\n-          body: paletteType === \"dark\" ? darkScrollbar() : null,\n-        },\n-      },\n-      MuiPopover: {\n-        styleOverrides: {\n-          root: {\n-            zIndex: 1600,\n-          },\n-        },\n-      },\n-      MuiModal: {\n-        styleOverrides: {\n-          root: {\n-            zIndex: 1600,\n-          },\n-        },\n-      },\n-    },\n-  });\n-\n-  function handleThemeChange() {\n-    setDarkMode(!darkMode);\n-    localStorage.setItem(\"theme\", darkMode ? \"light\" : \"dark\");\n-  }\n-\n-  useEffect(() => {\n-    const currentTheme = localStorage.getItem(\"theme\");\n-    setDarkMode(currentTheme === \"dark\");\n-  }, []);\n-\n-  return (\n-    <ThemeProvider theme={theme}>\n-      <Container disableGutters maxWidth={false}>\n-        <CssBaseline />\n-\n-        <Box\n-          sx={{\n-            position: \"absolute\",\n-            top: 12,\n-            right: 12,\n-            zIndex: 1000,\n-            display: \"flex\",\n-            flexDirection: { xs: \"column\", sm: \"row\" },\n-            alignItems: \"center\",\n-            gap: 1,\n-            padding: { xs: \"20px 0px\", sm: \"0\" },\n-          }}\n-        >\n-          <IconButton\n-            component={Link}\n-            href=\"https://github.com/noworneverev/graphrag-visualizer\"\n-            target=\"_blank\"\n-            rel=\"noopener\"\n-            color=\"inherit\"\n-          >\n-            <GitHubIcon />\n-          </IconButton>\n-          {darkMode ? (\n-            <Tooltip  title={t('layout.tooltip.turnOnLight')}>\n-              <IconButton onClick={handleThemeChange} color=\"inherit\">\n-                <DarkModeOutlinedIcon />\n-              </IconButton>\n-            </Tooltip>\n-          ) : (\n-            <Tooltip  title={t('layout.tooltip.turnOffLight')}>\n-              <IconButton onClick={handleThemeChange} color=\"inherit\">\n-                <LightModeOutlinedIcon />\n-              </IconButton>\n-            </Tooltip>\n-          )}\n-        </Box>\n-        <GraphDataHandler />\n-      </Container>\n-    </ThemeProvider>\n-  );\n-};\n-\n-export default App;\n"
                },
                {
                    "date": 1727239760530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n           >\n             <GitHubIcon />\n           </IconButton>\n           {darkMode ? (\n-            <Tooltip  title={t('layout.tooltip.turnOnLight')}>\n+            <Tooltip  title={t('tooltip.turnOnLight')}>\n               <IconButton onClick={handleThemeChange} color=\"inherit\">\n                 <DarkModeOutlinedIcon />\n               </IconButton>\n             </Tooltip>\n"
                }
            ],
            "date": 1727234119027,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport ReactGA from \"react-ga4\";\n\nimport GraphDataHandler from \"../components/GraphDataHandler\";\nimport {\n  CssBaseline,\n  Container,\n  Box,\n  createTheme,\n  darkScrollbar,\n  ThemeProvider,\n  IconButton,\n  Tooltip,\n  Link,\n} from \"@mui/material\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport i18n from '@/i18n/i18next-config'\n\nconst App: React.FC = () => {\n  const [darkMode, setDarkMode] = useState(true);\n  const paletteType = darkMode ? \"dark\" : \"light\";\n\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n    },\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: {\n          body: paletteType === \"dark\" ? darkScrollbar() : null,\n        },\n      },\n      MuiPopover: {\n        styleOverrides: {\n          root: {\n            zIndex: 1600,\n          },\n        },\n      },\n      MuiModal: {\n        styleOverrides: {\n          root: {\n            zIndex: 1600,\n          },\n        },\n      },\n    },\n  });\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode);\n    localStorage.setItem(\"theme\", darkMode ? \"light\" : \"dark\");\n  }\n\n  useEffect(() => {\n    const currentTheme = localStorage.getItem(\"theme\");\n    setDarkMode(currentTheme === \"dark\");\n  }, []);\n\n  useEffect(() => {\n    const measurementId = process.env.REACT_APP_GA_MEASUREMENT_ID;\n    if (measurementId) {\n      ReactGA.initialize(measurementId);\n      ReactGA.send({\n        hitType: \"pageview\",\n        page: window.location.pathname + window.location.search,\n      });\n    } else {\n      console.error(\"Google Analytics measurement ID not found\");\n    }\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container disableGutters maxWidth={false}>\n        <CssBaseline />\n\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: 12,\n            right: 12,\n            zIndex: 1000,\n            display: \"flex\",\n            flexDirection: { xs: \"column\", sm: \"row\" },\n            alignItems: \"center\",\n            gap: 1,\n            padding: { xs: \"20px 0px\", sm: \"0\" },\n          }}\n        >\n          <IconButton\n            component={Link}\n            href=\"https://github.com/noworneverev/graphrag-visualizer\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            color=\"inherit\"\n          >\n            <GitHubIcon />\n          </IconButton>\n          {darkMode ? (\n            <Tooltip title=\"Turn on the light\">\n              <IconButton onClick={handleThemeChange} color=\"inherit\">\n                <DarkModeOutlinedIcon />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"Turn off the light\">\n              <IconButton onClick={handleThemeChange} color=\"inherit\">\n                <LightModeOutlinedIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Box>\n        <GraphDataHandler />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"
        }
    ]
}